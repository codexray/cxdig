package config

import (
	"codexray/cxdig/types"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestGetFileTypeAndLanguage(t *testing.T) {
	r := NewFileTypeRegistry()

	typ, lang := r.GetFileTypeAndLanguage("cmakelists.txt")
	assert.Equal(t, types.LanguageID("cmake"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.cmake")
	assert.Equal(t, types.LanguageID("cmake"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("makefile")
	assert.Equal(t, types.LanguageID("makefile"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.make")
	assert.Equal(t, types.LanguageID("makefile"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.mkfile")
	assert.Equal(t, types.LanguageID("makefile"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.mak")
	assert.Equal(t, types.LanguageID("makefile"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.mk")
	assert.Equal(t, types.LanguageID("makefile"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.pro")
	assert.Equal(t, types.LanguageID("qmake"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.pri")
	assert.Equal(t, types.LanguageID("qmake"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.sln")
	assert.Equal(t, types.LanguageID("visual studio"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.vcxproj")
	assert.Equal(t, types.LanguageID("visual studio"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.vcproj")
	assert.Equal(t, types.LanguageID("visual studio"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.props")
	assert.Equal(t, types.LanguageID("visual studio"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.xcconfig")
	assert.Equal(t, types.LanguageID("xcode"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.pbxproj")
	assert.Equal(t, types.LanguageID("xcode"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.xcworkspacedata")
	assert.Equal(t, types.LanguageID("xcode"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.am")
	assert.Equal(t, types.LanguageID("automake"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.qbs")
	assert.Equal(t, types.LanguageID("qbs"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.ninja")
	assert.Equal(t, types.LanguageID("ninja"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.vcpkg")
	assert.Equal(t, types.LanguageID("vcpkg"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.jam")
	assert.Equal(t, types.LanguageID("boost.jam"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.gradle")
	assert.Equal(t, types.LanguageID("gradle"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.Tup")
	assert.Equal(t, types.LanguageID("tup"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.bzl")
	assert.Equal(t, types.LanguageID("bazel"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.gyp")
	assert.Equal(t, types.LanguageID("gyp"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.gypi")
	assert.Equal(t, types.LanguageID("gyp"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.iss")
	assert.Equal(t, types.LanguageID("inno setup"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.wixproj")
	assert.Equal(t, types.LanguageID("wix"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.wxs")
	assert.Equal(t, types.LanguageID("wix"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.nsh")
	assert.Equal(t, types.LanguageID("nsis"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.nsi")
	assert.Equal(t, types.LanguageID("nsis"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("conanfile.txt")
	assert.Equal(t, types.LanguageID("conan"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)
	typ, lang = r.GetFileTypeAndLanguage("conanfile.py")
	assert.Equal(t, types.LanguageID("conan"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)
	typ, lang = r.GetFileTypeAndLanguage("conanenv.txt")
	assert.Equal(t, types.LanguageID("conan"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("sconstruct")
	assert.Equal(t, types.LanguageID("scons"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("premake4.lua")
	assert.Equal(t, types.LanguageID("premake"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)
	typ, lang = r.GetFileTypeAndLanguage("premake5.lua")
	assert.Equal(t, types.LanguageID("premake"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("gulp.js")
	assert.Equal(t, types.LanguageID("gulp"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("zeusfile.yml")
	assert.Equal(t, types.LanguageID("zeus"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("bam.lua")
	assert.Equal(t, types.LanguageID("bam"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("meson.build")
	assert.Equal(t, types.LanguageID("meson"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("huntergate.cmake")
	assert.Equal(t, types.LanguageID("hunter"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)
	typ, lang = r.GetFileTypeAndLanguage("hunter.cmake")
	assert.Equal(t, types.LanguageID("hunter"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("requirements.txt")
	assert.Equal(t, types.LanguageID("cget"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("meta.yaml")
	assert.Equal(t, types.LanguageID("conda"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("build.hs")
	assert.Equal(t, types.LanguageID("shake"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("gemfile")
	assert.Equal(t, types.LanguageID("gemfile"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("package.json")
	assert.Equal(t, types.LanguageID("npm"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("webpack.config.js")
	assert.Equal(t, types.LanguageID("webpack"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("bower.json")
	assert.Equal(t, types.LanguageID("bower"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage("pom.xml")
	assert.Equal(t, types.LanguageID("maven"), lang)
	assert.Equal(t, types.FileTypeBuildSystem, typ)

	typ, lang = r.GetFileTypeAndLanguage(".eslintrc.test")
	assert.Equal(t, types.LanguageID("eslint"), lang)
	assert.Equal(t, types.FileTypeEnvConfig, typ)

	typ, lang = r.GetFileTypeAndLanguage(".travis.yml")
	assert.Equal(t, types.LanguageID("travis"), lang)
	assert.Equal(t, types.FileTypeEnvConfig, typ)

	typ, lang = r.GetFileTypeAndLanguage("appveyor.yml")
	assert.Equal(t, types.LanguageID("appveyor"), lang)
	assert.Equal(t, types.FileTypeEnvConfig, typ)

	typ, lang = r.GetFileTypeAndLanguage(".gitlab-ci.yml")
	assert.Equal(t, types.LanguageID("gitlab"), lang)
	assert.Equal(t, types.FileTypeEnvConfig, typ)

	typ, lang = r.GetFileTypeAndLanguage("circle.yml")
	assert.Equal(t, types.LanguageID("circleci"), lang)
	assert.Equal(t, types.FileTypeEnvConfig, typ)

	typ, lang = r.GetFileTypeAndLanguage(".clang-format")
	assert.Equal(t, types.LanguageID("clangformat"), lang)
	assert.Equal(t, types.FileTypeEnvConfig, typ)

	typ, lang = r.GetFileTypeAndLanguage(".clang-format")
	assert.Equal(t, types.LanguageID("clangformat"), lang)
	assert.Equal(t, types.FileTypeEnvConfig, typ)

	typ, lang = r.GetFileTypeAndLanguage(".clang_complete")
	assert.Equal(t, types.LanguageID("clang_complete"), lang)
	assert.Equal(t, types.FileTypeEnvConfig, typ)

	typ, lang = r.GetFileTypeAndLanguage(".editorconfig")
	assert.Equal(t, types.LanguageID("editorconfig"), lang)
	assert.Equal(t, types.FileTypeEnvConfig, typ)

	typ, lang = r.GetFileTypeAndLanguage(".gdbinit")
	assert.Equal(t, types.LanguageID("gdbinit"), lang)
	assert.Equal(t, types.FileTypeEnvConfig, typ)

	typ, lang = r.GetFileTypeAndLanguage(".yardopts")
	assert.Equal(t, types.LanguageID("yard"), lang)
	assert.Equal(t, types.FileTypeEnvConfig, typ)

	typ, lang = r.GetFileTypeAndLanguage(".istanbul.yml")
	assert.Equal(t, types.LanguageID("istanbul"), lang)
	assert.Equal(t, types.FileTypeEnvConfig, typ)

	typ, lang = r.GetFileTypeAndLanguage(".codecov.yml")
	assert.Equal(t, types.LanguageID("codecov.io"), lang)
	assert.Equal(t, types.FileTypeEnvConfig, typ)

	typ, lang = r.GetFileTypeAndLanguage(".pylintrc")
	assert.Equal(t, types.LanguageID("pylint"), lang)
	assert.Equal(t, types.FileTypeEnvConfig, typ)

	typ, lang = r.GetFileTypeAndLanguage(".flake8")
	assert.Equal(t, types.LanguageID("flake8"), lang)
	assert.Equal(t, types.FileTypeEnvConfig, typ)

	typ, lang = r.GetFileTypeAndLanguage(".dir-locals.el")
	assert.Equal(t, types.LanguageID("emacs.dir-locals"), lang)
	assert.Equal(t, types.FileTypeEnvConfig, typ)

	typ, lang = r.GetFileTypeAndLanguage("doxygen.config")
	assert.Equal(t, types.LanguageID("doxygen"), lang)
	assert.Equal(t, types.FileTypeEnvConfig, typ)

	typ, lang = r.GetFileTypeAndLanguage(".mention-bot")
	assert.Equal(t, types.LanguageID("mention-bot"), lang)
	assert.Equal(t, types.FileTypeEnvConfig, typ)

	typ, lang = r.GetFileTypeAndLanguage("APACHE-2.0.txt")
	assert.Equal(t, types.LanguageID("apache-2.0"), lang)
	assert.Equal(t, types.FileTypeLicense, typ)

	typ, lang = r.GetFileTypeAndLanguage("GNU-AGPL-3.0.txt")
	assert.Equal(t, types.LanguageID("agpl-3.0"), lang)
	assert.Equal(t, types.FileTypeLicense, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.s")
	assert.Equal(t, types.LanguageID("assembly"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.asm")
	assert.Equal(t, types.LanguageID("assembly"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.c")
	assert.Equal(t, types.LanguageID("c"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.cpp")
	assert.Equal(t, types.LanguageID("c++"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.cc")
	assert.Equal(t, types.LanguageID("c++"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.cxx")
	assert.Equal(t, types.LanguageID("c++"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.c++")
	assert.Equal(t, types.LanguageID("c++"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.h")
	assert.Equal(t, types.LanguageID("c++"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.hh")
	assert.Equal(t, types.LanguageID("c++"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.hpp")
	assert.Equal(t, types.LanguageID("c++"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.hxx")
	assert.Equal(t, types.LanguageID("c++"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.h++")
	assert.Equal(t, types.LanguageID("c++"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.inc")
	assert.Equal(t, types.LanguageID("c++"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.inl")
	assert.Equal(t, types.LanguageID("c++"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.ipp")
	assert.Equal(t, types.LanguageID("c++"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.tcc")
	assert.Equal(t, types.LanguageID("c++"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.tpp")
	assert.Equal(t, types.LanguageID("c++"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.txx")
	assert.Equal(t, types.LanguageID("c++"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.moc")
	assert.Equal(t, types.LanguageID("c++"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.cs")
	assert.Equal(t, types.LanguageID("c#"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.csx")
	assert.Equal(t, types.LanguageID("c#"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.d")
	assert.Equal(t, types.LanguageID("d"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.dd")
	assert.Equal(t, types.LanguageID("d"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.di")
	assert.Equal(t, types.LanguageID("d"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.f")
	assert.Equal(t, types.LanguageID("fortran"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.f03")
	assert.Equal(t, types.LanguageID("fortran"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.f08")
	assert.Equal(t, types.LanguageID("fortran"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.f77")
	assert.Equal(t, types.LanguageID("fortran"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.f90")
	assert.Equal(t, types.LanguageID("fortran"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.f95")
	assert.Equal(t, types.LanguageID("fortran"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.for")
	assert.Equal(t, types.LanguageID("fortran"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.fpp")
	assert.Equal(t, types.LanguageID("fortran"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.go")
	assert.Equal(t, types.LanguageID("go"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.java")
	assert.Equal(t, types.LanguageID("java"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.dfm")
	assert.Equal(t, types.LanguageID("pascal"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.dpr")
	assert.Equal(t, types.LanguageID("pascal"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.lpr")
	assert.Equal(t, types.LanguageID("pascal"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.pas")
	assert.Equal(t, types.LanguageID("pascal"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.pascal")
	assert.Equal(t, types.LanguageID("pascal"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.al")
	assert.Equal(t, types.LanguageID("perl"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.perl")
	assert.Equal(t, types.LanguageID("perl"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.ph")
	assert.Equal(t, types.LanguageID("perl"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.pl")
	assert.Equal(t, types.LanguageID("perl"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.plx")
	assert.Equal(t, types.LanguageID("perl"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.pm")
	assert.Equal(t, types.LanguageID("perl"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.psgi")
	assert.Equal(t, types.LanguageID("perl"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.aw")
	assert.Equal(t, types.LanguageID("php"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.ctp")
	assert.Equal(t, types.LanguageID("php"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.php")
	assert.Equal(t, types.LanguageID("php"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.php3")
	assert.Equal(t, types.LanguageID("php"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.php4")
	assert.Equal(t, types.LanguageID("php"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.php5")
	assert.Equal(t, types.LanguageID("php"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.phps")
	assert.Equal(t, types.LanguageID("php"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.phpt")
	assert.Equal(t, types.LanguageID("php"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.phtml")
	assert.Equal(t, types.LanguageID("php"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.lmi")
	assert.Equal(t, types.LanguageID("python"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.py")
	assert.Equal(t, types.LanguageID("python"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.py3")
	assert.Equal(t, types.LanguageID("python"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.pyde")
	assert.Equal(t, types.LanguageID("python"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.pyp")
	assert.Equal(t, types.LanguageID("python"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.pyt")
	assert.Equal(t, types.LanguageID("python"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.pyw")
	assert.Equal(t, types.LanguageID("python"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.xpy")
	assert.Equal(t, types.LanguageID("python"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.pyx")
	assert.Equal(t, types.LanguageID("cython"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.qml")
	assert.Equal(t, types.LanguageID("qml"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.r")
	assert.Equal(t, types.LanguageID("r"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.rd")
	assert.Equal(t, types.LanguageID("r"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.rsx")
	assert.Equal(t, types.LanguageID("r"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.eye")
	assert.Equal(t, types.LanguageID("ruby"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.gemspec")
	assert.Equal(t, types.LanguageID("ruby"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.god")
	assert.Equal(t, types.LanguageID("ruby"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.irbc")
	assert.Equal(t, types.LanguageID("ruby"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.rabl")
	assert.Equal(t, types.LanguageID("ruby"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.rake")
	assert.Equal(t, types.LanguageID("ruby"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.rb")
	assert.Equal(t, types.LanguageID("ruby"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.rbuild")
	assert.Equal(t, types.LanguageID("ruby"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.rbw")
	assert.Equal(t, types.LanguageID("ruby"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.rbx")
	assert.Equal(t, types.LanguageID("ruby"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.ru")
	assert.Equal(t, types.LanguageID("ruby"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.ruby")
	assert.Equal(t, types.LanguageID("ruby"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.rs")
	assert.Equal(t, types.LanguageID("rust"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.cql")
	assert.Equal(t, types.LanguageID("sql"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.ddl")
	assert.Equal(t, types.LanguageID("sql"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.mysql")
	assert.Equal(t, types.LanguageID("sql"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.prc")
	assert.Equal(t, types.LanguageID("sql"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.sql")
	assert.Equal(t, types.LanguageID("sql"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.tab")
	assert.Equal(t, types.LanguageID("sql"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.udf")
	assert.Equal(t, types.LanguageID("sql"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.viw")
	assert.Equal(t, types.LanguageID("sql"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.vb")
	assert.Equal(t, types.LanguageID("visual basic"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.vba")
	assert.Equal(t, types.LanguageID("visual basic"), lang)
	assert.Equal(t, types.FileTypeSource, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.vbs")
	assert.Equal(t, types.LanguageID("visual basic"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.i")
	assert.Equal(t, types.LanguageID("swig"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.idl")
	assert.Equal(t, types.LanguageID("idl"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.proto")
	assert.Equal(t, types.LanguageID("protocol buffer"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.thrift")
	assert.Equal(t, types.LanguageID("thrift"), lang)
	assert.Equal(t, types.FileTypeSource, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.fbs")
	assert.Equal(t, types.LanguageID("flatbuffers"), lang)
	assert.Equal(t, types.FileTypeGenerator, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.capnp")
	assert.Equal(t, types.LanguageID("cap'n proto"), lang)
	assert.Equal(t, types.FileTypeGenerator, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.l")
	assert.Equal(t, types.LanguageID("lex"), lang)
	assert.Equal(t, types.FileTypeGenerator, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.lex")
	assert.Equal(t, types.LanguageID("lex"), lang)
	assert.Equal(t, types.FileTypeGenerator, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.ll")
	assert.Equal(t, types.LanguageID("lex"), lang)
	assert.Equal(t, types.FileTypeGenerator, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.y")
	assert.Equal(t, types.LanguageID("yacc"), lang)
	assert.Equal(t, types.FileTypeGenerator, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.yacc")
	assert.Equal(t, types.LanguageID("yacc"), lang)
	assert.Equal(t, types.FileTypeGenerator, typ)
	typ, lang = r.GetFileTypeAndLanguage("test.yxx")
	assert.Equal(t, types.LanguageID("yacc"), lang)
	assert.Equal(t, types.FileTypeGenerator, typ)

	typ, lang = r.GetFileTypeAndLanguage("test.m4")
	assert.Equal(t, types.LanguageID("m4"), lang)
	assert.Equal(t, types.FileTypeGenerator, typ)

	typ, lang = r.GetFileTypeAndLanguage("unknown type")
	assert.Equal(t, types.LanguageUnknown, lang)
	assert.Equal(t, types.FileTypeUnknown, typ)
}
