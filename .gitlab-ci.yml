build:
  stage: build
  image: golang:1.10-stretch
  before_script:
    - BUILD_DIR=$GOPATH/src/$CI_PROJECT_PATH
    - mkdir -p $BUILD_DIR && rmdir $BUILD_DIR
    - ln -s `pwd` $BUILD_DIR
    - cd $BUILD_DIR
  script:
    # check everything builds well
    - go build ./...
    # unit tests
    # - ./code-coverage.sh
    # build
    - VERSION="$CI_COMMIT_REF_NAME.`date +%Y.%m.%d`"
    - go build -o cxdig -ldflags "-X cmd.softwareVersion=$VERSION"
    - ./cxdig version
    # create package
    - mkdir bin
    - mv cxdig ./bin/
    - go build -o ./bin/dumbtool ./test_suite/dumbtool
  artifacts:
    expire_in: 1 week
    paths:
      - bin/

test_cmake:
  stage: test
  image: buildpack-deps:xenial-scm
  before_script:
    - git clone https://github.com/Kitware/CMake --depth 120
  script:
    - ./bin/cxdig scan CMake
    - if [ ! -f "CMake.cxray/commits.json" ]; then echo "commits JSON file is missing" && exit 1; fi
    - if [ ! -f "CMake.cxray/referential.json" ]; then echo "referential JSON file is missing" && exit 1; fi
    - ./bin/cxdig sample --cmd "./bin/dumbtool --id {commit.id} --name {name} {path}" CMake --limit 100 | tee test-output.log
    #- NBRETURN=$(cat test-output.log | wc -l)
    #- if [ "$NBRETURN" != "100" ]; then echo "Found $NBRETURN lines, expected 100" && exit 1; fi
