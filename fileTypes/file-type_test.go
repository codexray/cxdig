package filestypes

import (
	"fmt"
	"strconv"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestIdentifyFileTypeAndLanguage(t *testing.T) {
	require.NoError(t, InitFileTypeMaps())
	fmt.Println("Size of nameAndSuffixMap : " + strconv.Itoa(len(nameAndSuffixMap)))
	fmt.Println("Size of prefixMap : " + strconv.Itoa(len(prefixMap)))

	typ, lang := IdentifyFileTypeAndLanguage("cmakelists.txt")
	assert.Equal(t, LanguageID("cmake"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.cmake")
	assert.Equal(t, LanguageID("cmake"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("makefile")
	assert.Equal(t, LanguageID("makefile"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.make")
	assert.Equal(t, LanguageID("makefile"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.mkfile")
	assert.Equal(t, LanguageID("makefile"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.mak")
	assert.Equal(t, LanguageID("makefile"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.mk")
	assert.Equal(t, LanguageID("makefile"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.pro")
	assert.Equal(t, LanguageID("qmake"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.pri")
	assert.Equal(t, LanguageID("qmake"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.sln")
	assert.Equal(t, LanguageID("visual studio"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.vcxproj")
	assert.Equal(t, LanguageID("visual studio"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.vcproj")
	assert.Equal(t, LanguageID("visual studio"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.props")
	assert.Equal(t, LanguageID("visual studio"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.xcconfig")
	assert.Equal(t, LanguageID("xcode"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.pbxproj")
	assert.Equal(t, LanguageID("xcode"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.xcworkspacedata")
	assert.Equal(t, LanguageID("xcode"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.am")
	assert.Equal(t, LanguageID("automake"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.qbs")
	assert.Equal(t, LanguageID("qbs"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.ninja")
	assert.Equal(t, LanguageID("ninja"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.vcpkg")
	assert.Equal(t, LanguageID("vcpkg"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.jam")
	assert.Equal(t, LanguageID("boost.jam"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.gradle")
	assert.Equal(t, LanguageID("gradle"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.Tup")
	assert.Equal(t, LanguageID("tup"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.bzl")
	assert.Equal(t, LanguageID("bazel"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.gyp")
	assert.Equal(t, LanguageID("gyp"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.gypi")
	assert.Equal(t, LanguageID("gyp"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.iss")
	assert.Equal(t, LanguageID("inno setup"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.wixproj")
	assert.Equal(t, LanguageID("wix"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.wxs")
	assert.Equal(t, LanguageID("wix"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.nsh")
	assert.Equal(t, LanguageID("nsis"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.nsi")
	assert.Equal(t, LanguageID("nsis"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("conanfile.txt")
	assert.Equal(t, LanguageID("conan"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)
	typ, lang = IdentifyFileTypeAndLanguage("conanfile.py")
	assert.Equal(t, LanguageID("conan"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)
	typ, lang = IdentifyFileTypeAndLanguage("conanenv.txt")
	assert.Equal(t, LanguageID("conan"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("sconstruct")
	assert.Equal(t, LanguageID("scons"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("premake4.lua")
	assert.Equal(t, LanguageID("premake"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)
	typ, lang = IdentifyFileTypeAndLanguage("premake5.lua")
	assert.Equal(t, LanguageID("premake"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("gulp.js")
	assert.Equal(t, LanguageID("gulp"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("zeusfile.yml")
	assert.Equal(t, LanguageID("zeus"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("bam.lua")
	assert.Equal(t, LanguageID("bam"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("meson.build")
	assert.Equal(t, LanguageID("meson"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("huntergate.cmake")
	assert.Equal(t, LanguageID("hunter"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)
	typ, lang = IdentifyFileTypeAndLanguage("hunter.cmake")
	assert.Equal(t, LanguageID("hunter"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("requirements.txt")
	assert.Equal(t, LanguageID("cget"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("meta.yaml")
	assert.Equal(t, LanguageID("conda"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("build.hs")
	assert.Equal(t, LanguageID("shake"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("gemfile")
	assert.Equal(t, LanguageID("gemfile"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("package.json")
	assert.Equal(t, LanguageID("npm"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("webpack.config.js")
	assert.Equal(t, LanguageID("webpack"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("bower.json")
	assert.Equal(t, LanguageID("bower"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage("pom.xml")
	assert.Equal(t, LanguageID("maven"), lang)
	assert.Equal(t, FileTypeBuildSystem, typ)

	typ, lang = IdentifyFileTypeAndLanguage(".eslintrc.test")
	assert.Equal(t, LanguageID("eslint"), lang)
	assert.Equal(t, FileTypeEnvConfig, typ)

	typ, lang = IdentifyFileTypeAndLanguage(".travis.yml")
	assert.Equal(t, LanguageID("travis"), lang)
	assert.Equal(t, FileTypeEnvConfig, typ)

	typ, lang = IdentifyFileTypeAndLanguage("appveyor.yml")
	assert.Equal(t, LanguageID("appveyor"), lang)
	assert.Equal(t, FileTypeEnvConfig, typ)

	typ, lang = IdentifyFileTypeAndLanguage(".gitlab-ci.yml")
	assert.Equal(t, LanguageID("gitlab"), lang)
	assert.Equal(t, FileTypeEnvConfig, typ)

	typ, lang = IdentifyFileTypeAndLanguage("circle.yml")
	assert.Equal(t, LanguageID("circleci"), lang)
	assert.Equal(t, FileTypeEnvConfig, typ)

	typ, lang = IdentifyFileTypeAndLanguage(".clang-format")
	assert.Equal(t, LanguageID("clangformat"), lang)
	assert.Equal(t, FileTypeEnvConfig, typ)

	typ, lang = IdentifyFileTypeAndLanguage(".clang-format")
	assert.Equal(t, LanguageID("clangformat"), lang)
	assert.Equal(t, FileTypeEnvConfig, typ)

	typ, lang = IdentifyFileTypeAndLanguage(".clang_complete")
	assert.Equal(t, LanguageID("clang_complete"), lang)
	assert.Equal(t, FileTypeEnvConfig, typ)

	typ, lang = IdentifyFileTypeAndLanguage(".editorconfig")
	assert.Equal(t, LanguageID("editorconfig"), lang)
	assert.Equal(t, FileTypeEnvConfig, typ)

	typ, lang = IdentifyFileTypeAndLanguage(".gdbinit")
	assert.Equal(t, LanguageID("gdbinit"), lang)
	assert.Equal(t, FileTypeEnvConfig, typ)

	typ, lang = IdentifyFileTypeAndLanguage(".yardopts")
	assert.Equal(t, LanguageID("yard"), lang)
	assert.Equal(t, FileTypeEnvConfig, typ)

	typ, lang = IdentifyFileTypeAndLanguage(".istanbul.yml")
	assert.Equal(t, LanguageID("istanbul"), lang)
	assert.Equal(t, FileTypeEnvConfig, typ)

	typ, lang = IdentifyFileTypeAndLanguage(".codecov.yml")
	assert.Equal(t, LanguageID("codecov.io"), lang)
	assert.Equal(t, FileTypeEnvConfig, typ)

	typ, lang = IdentifyFileTypeAndLanguage(".pylintrc")
	assert.Equal(t, LanguageID("pylint"), lang)
	assert.Equal(t, FileTypeEnvConfig, typ)

	typ, lang = IdentifyFileTypeAndLanguage(".flake8")
	assert.Equal(t, LanguageID("flake8"), lang)
	assert.Equal(t, FileTypeEnvConfig, typ)

	typ, lang = IdentifyFileTypeAndLanguage(".dir-locals.el")
	assert.Equal(t, LanguageID("emacs.dir-locals"), lang)
	assert.Equal(t, FileTypeEnvConfig, typ)

	typ, lang = IdentifyFileTypeAndLanguage("doxygen.config")
	assert.Equal(t, LanguageID("doxygen"), lang)
	assert.Equal(t, FileTypeEnvConfig, typ)

	typ, lang = IdentifyFileTypeAndLanguage(".mention-bot")
	assert.Equal(t, LanguageID("mention-bot"), lang)
	assert.Equal(t, FileTypeEnvConfig, typ)

	typ, lang = IdentifyFileTypeAndLanguage("APACHE-2.0.txt")
	assert.Equal(t, LanguageID("apache-2.0"), lang)
	assert.Equal(t, FileTypeLicense, typ)

	typ, lang = IdentifyFileTypeAndLanguage("GNU-AGPL-3.0.txt")
	assert.Equal(t, LanguageID("agpl-3.0"), lang)
	assert.Equal(t, FileTypeLicense, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.s")
	assert.Equal(t, LanguageID("assembly"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.asm")
	assert.Equal(t, LanguageID("assembly"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.c")
	assert.Equal(t, LanguageID("c"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.cpp")
	assert.Equal(t, LanguageID("c++"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.cc")
	assert.Equal(t, LanguageID("c++"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.cxx")
	assert.Equal(t, LanguageID("c++"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.c++")
	assert.Equal(t, LanguageID("c++"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.h")
	assert.Equal(t, LanguageID("c++"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.hh")
	assert.Equal(t, LanguageID("c++"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.hpp")
	assert.Equal(t, LanguageID("c++"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.hxx")
	assert.Equal(t, LanguageID("c++"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.h++")
	assert.Equal(t, LanguageID("c++"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.inc")
	assert.Equal(t, LanguageID("c++"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.inl")
	assert.Equal(t, LanguageID("c++"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.ipp")
	assert.Equal(t, LanguageID("c++"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.tcc")
	assert.Equal(t, LanguageID("c++"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.tpp")
	assert.Equal(t, LanguageID("c++"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.txx")
	assert.Equal(t, LanguageID("c++"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.moc")
	assert.Equal(t, LanguageID("c++"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.cs")
	assert.Equal(t, LanguageID("c#"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.csx")
	assert.Equal(t, LanguageID("c#"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.d")
	assert.Equal(t, LanguageID("d"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.dd")
	assert.Equal(t, LanguageID("d"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.di")
	assert.Equal(t, LanguageID("d"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.f")
	assert.Equal(t, LanguageID("fortran"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.f03")
	assert.Equal(t, LanguageID("fortran"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.f08")
	assert.Equal(t, LanguageID("fortran"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.f77")
	assert.Equal(t, LanguageID("fortran"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.f90")
	assert.Equal(t, LanguageID("fortran"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.f95")
	assert.Equal(t, LanguageID("fortran"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.for")
	assert.Equal(t, LanguageID("fortran"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.fpp")
	assert.Equal(t, LanguageID("fortran"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.go")
	assert.Equal(t, LanguageID("go"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.java")
	assert.Equal(t, LanguageID("java"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.dfm")
	assert.Equal(t, LanguageID("pascal"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.dpr")
	assert.Equal(t, LanguageID("pascal"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.lpr")
	assert.Equal(t, LanguageID("pascal"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.pas")
	assert.Equal(t, LanguageID("pascal"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.pascal")
	assert.Equal(t, LanguageID("pascal"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.al")
	assert.Equal(t, LanguageID("perl"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.perl")
	assert.Equal(t, LanguageID("perl"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.ph")
	assert.Equal(t, LanguageID("perl"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.pl")
	assert.Equal(t, LanguageID("perl"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.plx")
	assert.Equal(t, LanguageID("perl"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.pm")
	assert.Equal(t, LanguageID("perl"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.psgi")
	assert.Equal(t, LanguageID("perl"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.aw")
	assert.Equal(t, LanguageID("php"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.ctp")
	assert.Equal(t, LanguageID("php"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.php")
	assert.Equal(t, LanguageID("php"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.php3")
	assert.Equal(t, LanguageID("php"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.php4")
	assert.Equal(t, LanguageID("php"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.php5")
	assert.Equal(t, LanguageID("php"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.phps")
	assert.Equal(t, LanguageID("php"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.phpt")
	assert.Equal(t, LanguageID("php"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.phtml")
	assert.Equal(t, LanguageID("php"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.lmi")
	assert.Equal(t, LanguageID("python"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.py")
	assert.Equal(t, LanguageID("python"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.py3")
	assert.Equal(t, LanguageID("python"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.pyde")
	assert.Equal(t, LanguageID("python"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.pyp")
	assert.Equal(t, LanguageID("python"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.pyt")
	assert.Equal(t, LanguageID("python"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.pyw")
	assert.Equal(t, LanguageID("python"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.xpy")
	assert.Equal(t, LanguageID("python"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.pyx")
	assert.Equal(t, LanguageID("cython"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.qml")
	assert.Equal(t, LanguageID("qml"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.r")
	assert.Equal(t, LanguageID("r"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.rd")
	assert.Equal(t, LanguageID("r"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.rsx")
	assert.Equal(t, LanguageID("r"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.eye")
	assert.Equal(t, LanguageID("ruby"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.gemspec")
	assert.Equal(t, LanguageID("ruby"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.god")
	assert.Equal(t, LanguageID("ruby"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.irbc")
	assert.Equal(t, LanguageID("ruby"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.rabl")
	assert.Equal(t, LanguageID("ruby"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.rake")
	assert.Equal(t, LanguageID("ruby"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.rb")
	assert.Equal(t, LanguageID("ruby"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.rbuild")
	assert.Equal(t, LanguageID("ruby"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.rbw")
	assert.Equal(t, LanguageID("ruby"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.rbx")
	assert.Equal(t, LanguageID("ruby"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.ru")
	assert.Equal(t, LanguageID("ruby"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.ruby")
	assert.Equal(t, LanguageID("ruby"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.rs")
	assert.Equal(t, LanguageID("rust"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.cql")
	assert.Equal(t, LanguageID("sql"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.ddl")
	assert.Equal(t, LanguageID("sql"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.mysql")
	assert.Equal(t, LanguageID("sql"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.prc")
	assert.Equal(t, LanguageID("sql"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.sql")
	assert.Equal(t, LanguageID("sql"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.tab")
	assert.Equal(t, LanguageID("sql"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.udf")
	assert.Equal(t, LanguageID("sql"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.viw")
	assert.Equal(t, LanguageID("sql"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.vb")
	assert.Equal(t, LanguageID("visual basic"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.vba")
	assert.Equal(t, LanguageID("visual basic"), lang)
	assert.Equal(t, FileTypeSource, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.vbs")
	assert.Equal(t, LanguageID("visual basic"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.i")
	assert.Equal(t, LanguageID("swig"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.idl")
	assert.Equal(t, LanguageID("idl"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.proto")
	assert.Equal(t, LanguageID("protocol buffer"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.thrift")
	assert.Equal(t, LanguageID("thrift"), lang)
	assert.Equal(t, FileTypeSource, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.fbs")
	assert.Equal(t, LanguageID("flatbuffers"), lang)
	assert.Equal(t, FileTypeGenerator, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.capnp")
	assert.Equal(t, LanguageID("cap'n proto"), lang)
	assert.Equal(t, FileTypeGenerator, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.l")
	assert.Equal(t, LanguageID("lex"), lang)
	assert.Equal(t, FileTypeGenerator, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.lex")
	assert.Equal(t, LanguageID("lex"), lang)
	assert.Equal(t, FileTypeGenerator, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.ll")
	assert.Equal(t, LanguageID("lex"), lang)
	assert.Equal(t, FileTypeGenerator, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.y")
	assert.Equal(t, LanguageID("yacc"), lang)
	assert.Equal(t, FileTypeGenerator, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.yacc")
	assert.Equal(t, LanguageID("yacc"), lang)
	assert.Equal(t, FileTypeGenerator, typ)
	typ, lang = IdentifyFileTypeAndLanguage("test.yxx")
	assert.Equal(t, LanguageID("yacc"), lang)
	assert.Equal(t, FileTypeGenerator, typ)

	typ, lang = IdentifyFileTypeAndLanguage("test.m4")
	assert.Equal(t, LanguageID("m4"), lang)
	assert.Equal(t, FileTypeGenerator, typ)

	typ, lang = IdentifyFileTypeAndLanguage("unknown type")
	assert.Equal(t, LanguageUnknown, lang)
	assert.Equal(t, FileTypeUnknown, typ)
}
